{"version":3,"sources":["CurrencyOne.jsx","CurrencyTwo.jsx","Exchange.jsx","Chart.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","CurrencyOne","changeCurrency","currency","changeValue","currencyValue","classes","console","log","currencyOne","className","FormControl","Select","value","onChange","e","target","MenuItem","TextField","id","label","type","InputLabelProps","shrink","variant","CurrencyTwo","currencyTwo","button","Exchange","props","Button","onClick","color","startIcon","Chart","mapData","renderLineChart","height","data","top","right","left","bottom","strokeDasharray","dataKey","stroke","App","useState","changeMapData","convertCurrency","conversionRate","toFixed","useEffect","Promise","all","axios","get","then","response","conversionValue","rates","newDatesMapped","Object","entries","sort","date1","date2","split","map","date","converted","Paper","elevation","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"yVAUMA,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,QAETC,YAAa,CACXH,OAAQF,EAAMG,QAAQ,GACtBG,SAAU,KAEZC,YAAa,CACXC,UAAWR,EAAMG,QAAQ,SAKhB,SAASM,EAAT,GAKX,IAJFC,EAIC,EAJDA,eACAC,EAGC,EAHDA,SACAC,EAEC,EAFDA,YACAC,EACC,EADDA,cAEMC,EAAUhB,IAgBhB,OAFAiB,QAAQC,IAAI,uBAAwBL,EAASM,aAG3C,6BACE,yBAAKC,UAAU,sBACZ,IACD,kBAACC,EAAA,EAAD,CAAaD,UAAWJ,EAAQT,cAChC,kBAACe,EAAA,EAAD,CACEC,MAAOV,EAASM,YAChBK,SArBqB,SAAAC,GAC3Bb,EAAe,2BACVC,GADS,IAEZM,YAAaM,EAAEC,OAAOH,UAmBlBH,UAAU,qBAEV,kBAACO,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,OACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,SAEF,kBAACF,EAAA,EAAD,MACA,kBAACO,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,SACNC,KAAK,SACLC,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,WACRX,MAAOR,EAAcI,YACrBK,SAhFkB,SAAAC,GACxBR,QAAQC,IAAI,IAAKO,EAAEC,OAAOH,OAC1BT,EAAY,2BAAKC,GAAN,IAAqBI,YAAaM,EAAEC,OAAOH,cCjC1D,IAAMvB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,QAETC,YAAa,CACXH,OAAQF,EAAMG,QAAQ,GACtBG,SAAU,KAEZC,YAAa,CACXC,UAAWR,EAAMG,QAAQ,SAKhB,SAAS8B,EAAT,GAIX,IAHFvB,EAGC,EAHDA,eACAC,EAEC,EAFDA,SACAE,EACC,EADDA,cAEMC,EAAUhB,IAKhB,OACE,6BACE,yBAAKoB,UAAU,sBACZ,IACD,kBAACC,EAAA,EAAD,CAAaD,UAAWJ,EAAQT,cAChC,kBAACe,EAAA,EAAD,CACEC,MAAOV,EAASuB,YAChBZ,SAVqB,SAAAC,GAC3Bb,EAAe,2BAAKC,GAAN,IAAgBuB,YAAaX,EAAEC,OAAOH,UAU9CH,UAAU,qBAEV,kBAACO,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAhB,QACA,kBAACI,EAAA,EAAD,CAAUJ,MAAM,OAAh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","file":"static/js/main.46216410.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CurrencyOne({\n  changeCurrency,\n  currency,\n  changeValue,\n  currencyValue,\n}) {\n  const classes = useStyles();\n\n  const handleCurrencyChange = e => {\n    changeCurrency({\n      ...currency,\n      currencyOne: e.target.value,\n    });\n  };\n\n  const handleValueChange = e => {\n    console.log(\"e\", e.target.value);\n    changeValue({ ...currencyValue, currencyOne: e.target.value });\n  };\n\n  console.log(\"currency.currencyOne\", currency.currencyOne);\n\n  return (\n    <div>\n      <div className=\"currency-container\">\n        {\" \"}\n        <FormControl className={classes.formControl}></FormControl>\n        <Select\n          value={currency.currencyOne}\n          onChange={handleCurrencyChange}\n          className=\"currency-dropdown\"\n        >\n          <MenuItem value=\"AED\"> AED</MenuItem>\n          <MenuItem value=\"ARS\"> ARS</MenuItem>\n          <MenuItem value=\"AUD\"> AUD</MenuItem>\n          <MenuItem value=\"BGN\"> BGN</MenuItem>\n          <MenuItem value=\"BRL\"> BRL</MenuItem>\n          <MenuItem value=\"BSD\"> BSD</MenuItem>\n          <MenuItem value=\"CAD\">CAD</MenuItem>\n          <MenuItem value=\"CHF\"> CHF</MenuItem>\n          <MenuItem value=\"CLP\"> CLP</MenuItem>\n          <MenuItem value=\"CNY\"> CNY</MenuItem>\n          <MenuItem value=\"COP\"> COP</MenuItem>\n          <MenuItem value=\"CZK\"> CZK</MenuItem>\n          <MenuItem value=\"DKK\"> DKK</MenuItem>\n          <MenuItem value=\"DOP\"> DOP</MenuItem>\n          <MenuItem value=\"EGP\"> EGP</MenuItem>\n          <MenuItem value=\"EUR\"> EUR</MenuItem>\n          <MenuItem value=\"FJD\"> FJD</MenuItem>\n          <MenuItem value=\"GBP\"> GBP</MenuItem>\n          <MenuItem value=\"GTQ\"> GTQ</MenuItem>\n          <MenuItem value=\"HKD\"> HKD</MenuItem>\n          <MenuItem value=\"HRK\"> HRK</MenuItem>\n          <MenuItem value=\"HUF\"> HUF</MenuItem>\n          <MenuItem value=\"IDR\"> IDR</MenuItem>\n          <MenuItem value=\"ILS\"> ILS</MenuItem>\n          <MenuItem value=\"INR\"> INR</MenuItem>\n          <MenuItem value=\"ISK\"> ISK</MenuItem>\n          <MenuItem value=\"JPY\"> JPY</MenuItem>\n          <MenuItem value=\"KRW\"> KRW</MenuItem>\n          <MenuItem value=\"KZT\"> KZT</MenuItem>\n          <MenuItem value=\"MXN\"> MXN</MenuItem>\n          <MenuItem value=\"MYR\"> MYR</MenuItem>\n          <MenuItem value=\"NOK\"> NOK</MenuItem>\n          <MenuItem value=\"NZD\"> NZD</MenuItem>\n          <MenuItem value=\"PAB\"> PAB</MenuItem>\n          <MenuItem value=\"PEN\"> PEN</MenuItem>\n          <MenuItem value=\"PHP\"> PHP</MenuItem>\n          <MenuItem value=\"PKR\"> PKR</MenuItem>\n          <MenuItem value=\"PLN\"> PLN</MenuItem>\n          <MenuItem value=\"PYG\"> PYG</MenuItem>\n          <MenuItem value=\"RON\"> RON</MenuItem>\n          <MenuItem value=\"RUB\"> RUB</MenuItem>\n          <MenuItem value=\"SAR\"> SAR</MenuItem>\n          <MenuItem value=\"SEK\"> SEK</MenuItem>\n          <MenuItem value=\"SGD\"> SGD</MenuItem>\n          <MenuItem value=\"THB\"> THB</MenuItem>\n          <MenuItem value=\"TRY\"> TRY</MenuItem>\n          <MenuItem value=\"TWD\"> TWD</MenuItem>\n          <MenuItem value=\"UAH\"> UAH</MenuItem>\n          <MenuItem value=\"USD\"> USD</MenuItem>\n          <MenuItem value=\"UYU\"> UYU</MenuItem>\n          <MenuItem value=\"VND\"> VND</MenuItem>\n          <MenuItem value=\"ZAR\"> ZAR</MenuItem>\n        </Select>\n        <FormControl />\n        <TextField\n          id=\"outlined-number\"\n          label=\"Number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currencyValue.currencyOne}\n          onChange={handleValueChange}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CurrencyTwo({\n  changeCurrency,\n  currency,\n  currencyValue,\n}) {\n  const classes = useStyles();\n\n  const handleCurrencyChange = e => {\n    changeCurrency({ ...currency, currencyTwo: e.target.value });\n  };\n  return (\n    <div>\n      <div className=\"currency-container\">\n        {\" \"}\n        <FormControl className={classes.formControl}></FormControl>\n        <Select\n          value={currency.currencyTwo}\n          onChange={handleCurrencyChange}\n          className=\"currency-dropdown\"\n        >\n          <MenuItem value=\"AED\"> AED</MenuItem>\n          <MenuItem value=\"ARS\"> ARS</MenuItem>\n          <MenuItem value=\"AUD\"> AUD</MenuItem>\n          <MenuItem value=\"BGN\"> BGN</MenuItem>\n          <MenuItem value=\"BRL\"> BRL</MenuItem>\n          <MenuItem value=\"BSD\"> BSD</MenuItem>\n          <MenuItem value=\"CAD\"> CAD</MenuItem>\n          <MenuItem value=\"CHF\"> CHF</MenuItem>\n          <MenuItem value=\"CLP\"> CLP</MenuItem>\n          <MenuItem value=\"CNY\"> CNY</MenuItem>\n          <MenuItem value=\"COP\"> COP</MenuItem>\n          <MenuItem value=\"CZK\"> CZK</MenuItem>\n          <MenuItem value=\"DKK\"> DKK</MenuItem>\n          <MenuItem value=\"DOP\"> DOP</MenuItem>\n          <MenuItem value=\"EGP\"> EGP</MenuItem>\n          <MenuItem value=\"EUR\"> EUR</MenuItem>\n          <MenuItem value=\"FJD\"> FJD</MenuItem>\n          <MenuItem value=\"GBP\"> GBP</MenuItem>\n          <MenuItem value=\"GTQ\"> GTQ</MenuItem>\n          <MenuItem value=\"HKD\"> HKD</MenuItem>\n          <MenuItem value=\"HRK\"> HRK</MenuItem>\n          <MenuItem value=\"HUF\"> HUF</MenuItem>\n          <MenuItem value=\"IDR\"> IDR</MenuItem>\n          <MenuItem value=\"ILS\"> ILS</MenuItem>\n          <MenuItem value=\"INR\"> INR</MenuItem>\n          <MenuItem value=\"ISK\"> ISK</MenuItem>\n          <MenuItem value=\"JPY\"> JPY</MenuItem>\n          <MenuItem value=\"KRW\"> KRW</MenuItem>\n          <MenuItem value=\"KZT\"> KZT</MenuItem>\n          <MenuItem value=\"MXN\"> MXN</MenuItem>\n          <MenuItem value=\"MYR\"> MYR</MenuItem>\n          <MenuItem value=\"NOK\"> NOK</MenuItem>\n          <MenuItem value=\"NZD\"> NZD</MenuItem>\n          <MenuItem value=\"PAB\"> PAB</MenuItem>\n          <MenuItem value=\"PEN\"> PEN</MenuItem>\n          <MenuItem value=\"PHP\"> PHP</MenuItem>\n          <MenuItem value=\"PKR\"> PKR</MenuItem>\n          <MenuItem value=\"PLN\"> PLN</MenuItem>\n          <MenuItem value=\"PYG\"> PYG</MenuItem>\n          <MenuItem value=\"RON\"> RON</MenuItem>\n          <MenuItem value=\"RUB\"> RUB</MenuItem>\n          <MenuItem value=\"SAR\"> SAR</MenuItem>\n          <MenuItem value=\"SEK\"> SEK</MenuItem>\n          <MenuItem value=\"SGD\"> SGD</MenuItem>\n          <MenuItem value=\"THB\"> THB</MenuItem>\n          <MenuItem value=\"TRY\"> TRY</MenuItem>\n          <MenuItem value=\"TWD\"> TWD</MenuItem>\n          <MenuItem value=\"UAH\"> UAH</MenuItem>\n          <MenuItem value=\"USD\"> USD</MenuItem>\n          <MenuItem value=\"UYU\"> UYU</MenuItem>\n          <MenuItem value=\"VND\"> VND</MenuItem>\n          <MenuItem value=\"ZAR\"> ZAR</MenuItem>\n        </Select>\n        <FormControl />\n        <TextField\n          id=\"outlined-number\"\n          label=\"Number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currencyValue.currencyTwo}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CurrencyOne from \"./CurrencyOne\";\nimport CurrencyTwo from \"./CurrencyTwo\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwapVertIcon from \"@material-ui/icons/SwapVert\";\n\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Exchange({ ...props }) {\n\n\n  const classes = useStyles();\n  const swapExchange = () => {\n    props.changeCurrency({\n      currencyOne: props.currency.currencyTwo,\n      currencyTwo: props.currency.currencyOne,\n    });\n  };\n  return (\n    <div>\n      <CurrencyOne {...props} />\n      <Button\n        onClick={swapExchange}\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        startIcon={<SwapVertIcon />}\n      >\n        Swap\n      </Button>\n      <CurrencyTwo {...props} />\n      <h2>\n        {props.currencyValue.currencyOne} {props.currency.currencyOne} ={\" \"}\n        {props.currencyValue.currencyTwo} {props.currency.currencyTwo}\n      </h2>\n    </div>\n  );\n}\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default function Chart({ mapData }) {\n  const renderLineChart = (\n    <LineChart\n      width={600}\n      height={300}\n      data={mapData}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"date\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"Exchange\"\n        stroke=\"#8884d8\"\n        // activeDot={{ r: 8 }}\n      />\n      {/* <Line type=\"monotone\" dataKey=\"uv\" stroke=\"#82ca9d\" /> */}\n    </LineChart>\n  );\n\n  return <div>{renderLineChart}</div>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Exchange from \"./Exchange\";\nimport Chart from \"./Chart\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction App() {\n  const [currency, changeCurrency] = useState({\n    currencyOne: \"CAD\",\n    currencyTwo: \"USD\",\n  });\n  const [currencyValue, changeValue] = useState({\n    currencyOne: 1,\n    currencyTwo: \"\",\n  });\n\n  const [mapData, changeMapData] = useState();\n\n  const convertCurrency = conversionRate => {\n    const converted = currencyValue.currencyOne * conversionRate;\n    return converted.toFixed(4);\n  };\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(\n        `https://api.exchangeratesapi.io/latest?base=${currency.currencyOne}\n  `\n      ),\n      axios.get(\n        `https://api.exchangeratesapi.io/history?start_at=2020-01-01&end_at=2020-06-17&base=${currency.currencyOne}`\n      ),\n    ]).then(response => {\n      const conversionValue = response[0].data.rates[currency.currencyTwo];\n      changeValue({\n        ...currencyValue,\n        currencyTwo: convertCurrency(conversionValue),\n      });\n      const dates = Object.entries(response[1].data.rates);\n      const newDates = dates.sort((date1, date2) => {\n        if (date1[0].split(\"-\")[1] === date2[0].split(\"-\")[1]) {\n          return date1[0].split(\"-\")[2] - date2[0].split(\"-\")[2];\n        } else {\n          return date1[0].split(\"-\")[1] - date2[0].split(\"-\")[1];\n        }\n      });\n\n      const newDatesMapped = newDates.map(date => {\n        const converted = convertCurrency(date[1][currency.currencyTwo]);\n        return { date: date[0], Exchange: converted };\n      });\n\n      changeMapData(newDatesMapped);\n    });\n  }, [currencyValue.currencyOne, currency]);\n\n  return (\n    <div className=\"App\">\n      <Paper elevation={24} className=\"container\">\n        <h1>FOREX Converter</h1>\n        <Exchange\n          currency={currency}\n          convertCurrency={convertCurrency}\n          changeCurrency={changeCurrency}\n          changeValue={changeValue}\n          currencyValue={currencyValue}\n        />\n        <Chart mapData={mapData} />\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}