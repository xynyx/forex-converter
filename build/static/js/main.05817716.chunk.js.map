{"version":3,"sources":["CurrencyOne.jsx","CurrencyTwo.jsx","Exchange.jsx","Chart.jsx","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","margin","spacing","width","formControl","minWidth","selectEmpty","marginTop","CurrencyOne","changeCurrencyOne","currencyOne","classes","className","FormControl","Select","value","currency","onChange","e","prev","target","MenuItem","TextField","id","label","type","InputLabelProps","shrink","variant","persist","handleValueChange","CurrencyTwo","changeCurrencyTwo","currencyTwo","currencyValue","button","Exchange","props","Button","onClick","color","startIcon","Chart","mapData","renderLineChart","height","data","top","right","left","bottom","strokeDasharray","dataKey","stroke","dot","App","useState","changeMapData","useEffect","Promise","all","axios","get","then","response","conversionValue","rates","convertCurrency","conversionRate","toFixed","converted","newDatesMapped","Object","entries","sort","date1","date2","split","map","date","Paper","elevation","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","console","message"],"mappings":"yVAWMA,G,OAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,QAETC,YAAa,CACXH,OAAQF,EAAMG,QAAQ,GACtBG,SAAU,KAEZC,YAAa,CACXC,UAAWR,EAAMG,QAAQ,UAKhB,SAASM,EAAT,GAGX,IAFFC,EAEC,EAFDA,kBACAC,EACC,EADDA,YAEMC,EAAUd,IAYhB,OACE,6BACE,yBAAKe,UAAU,sBACZ,IACD,kBAACC,EAAA,EAAD,CAAaD,UAAWD,EAAQP,cAChC,kBAACU,EAAA,EAAD,CACEC,MAAOL,EAAYM,SACnBC,SAjBqB,SAAAC,GAC3BT,GAAkB,SAAAU,GAAI,kCAAUA,GAAV,IAAgBH,SAAUE,EAAEE,OAAOL,YAiBnDH,UAAU,qBAEV,kBAACS,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,OACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,SAEF,kBAACF,EAAA,EAAD,MACA,kBAACS,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,SACNC,KAAK,SACLC,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,WACRb,MAAOL,EAAYK,MACnBE,SAAU,SAAAC,GAAC,OA5DO,SAAAA,GACxBA,EAAEW,UAEFpB,GAAkB,SAAAU,GAAI,kCAAUA,GAAV,IAAgBJ,MAAOG,EAAEE,OAAOL,WAyDjCe,CAAkBZ,QCvF3C,IAAMrB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCC,KAAM,CACJ,uBAAwB,CACtBC,OAAQF,EAAMG,QAAQ,GACtBC,MAAO,QAETC,YAAa,CACXH,OAAQF,EAAMG,QAAQ,GACtBG,SAAU,KAEZC,YAAa,CACXC,UAAWR,EAAMG,QAAQ,SAKhB,SAAS6B,EAAT,GAIX,IAHFC,EAGC,EAHDA,kBACAC,EAEC,EAFDA,YAGMtB,GADL,EADDuB,cAEgBrC,KAIhB,OACE,6BACE,yBAAKe,UAAU,sBACZ,IACD,kBAACC,EAAA,EAAD,CAAaD,UAAWD,EAAQP,cAChC,kBAACU,EAAA,EAAD,CACEC,MAAOkB,EAAYjB,SACnBC,SAVqB,SAAAC,GAC3Bc,GAAkB,SAAAb,GAAI,kCAAUA,GAAV,IAAgBH,SAAUE,EAAEE,OAAOL,YAUnDH,UAAU,qBAED,kBAACS,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACT,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,OACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,QACA,kBAACM,EAAA,EAAD,CAAUN,MAAM,OAAhB,SAEF,kBAACF,EAAA,EAAD,MACA,kBAACS,EAAA,EAAD,CACEC,GAAG,kBACHC,MAAM,SACNC,KAAK,SACLC,gBAAiB,CACfC,QAAQ,GAEVC,QAAQ,WACRb,MAAOkB,EAAYlB,U,+BCjFvBlB,EAAYC,aAAW,SAAAC,GAAK,MAAK,CACrCoC,OAAQ,CACNlC,OAAQF,EAAMG,QAAQ,QAIX,SAASkC,EAAT,GAAiC,IAAVC,EAAS,oBACvC1B,EAAUd,IAahB,OACE,6BACE,kBAACW,EAAgB6B,GACjB,kBAACC,EAAA,EAAD,CACEC,QAhBe,WACnBF,EAAM5B,mBAAkB,SAAAU,GAAI,kCACvBA,GADuB,IAE1BH,SAAUqB,EAAMJ,YAAYjB,cAG9BqB,EAAML,mBAAkB,SAAAb,GAAI,kCACvBA,GADuB,IAE1BH,SAAUqB,EAAM3B,YAAYM,eAS1BY,QAAQ,YACRY,MAAM,UACN5B,UAAWD,EAAQwB,OACnBM,UAAW,kBAAC,IAAD,OALb,QASA,kBAACV,EAAgBM,GACjB,4BACGA,EAAM3B,YAAYK,MADrB,IAC6BsB,EAAM3B,YAAYM,SAD/C,KAC2D,IACxDqB,EAAMJ,YAAYlB,MAFrB,IAE6BsB,EAAMJ,YAAYjB,W,YC/BtC,SAAS0B,EAAT,GAA6B,IAAZC,EAAW,EAAXA,QACxBC,EACJ,kBAAC,IAAD,CACEzC,MAAO,IACP0C,OAAQ,IACRC,KAAMH,EACN1C,OAAQ,CACN8C,IAAK,EACLC,MAAO,GACPC,KAAM,GACNC,OAAQ,IAGV,kBAAC,IAAD,CAAeC,gBAAgB,QAC/B,kBAAC,IAAD,CAAOC,QAAQ,SACf,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,MACA,kBAAC,IAAD,CACE3B,KAAK,WACL2B,QAAQ,WACRC,OAAO,UACPC,KAAK,KAKX,OAAO,6BAAMV,G,aCwCAW,MAvEf,WAAgB,IAAD,EAC4BC,mBAAS,CAChDxC,SAAU,MACVD,MAAO,IAHI,mBACNkB,EADM,KACOD,EADP,OAM4BwB,mBAAS,CAChDxC,SAAU,MACVD,MAAO,IARI,mBAMNL,EANM,KAMOD,EANP,OAWoB+C,qBAXpB,mBAWNb,EAXM,KAWGc,EAXH,KAuDb,OA1CAC,qBAAU,WACRC,QAAQC,IAAI,CACVC,IAAMC,IAAN,sDACiDpD,EAAYM,SAD7D,SAIA6C,IAAMC,IAAN,6FACwFpD,EAAYM,aAEnG+C,MAAK,SAAAC,GACN,IAAMC,EAAkBD,EAAS,GAAGlB,KAAKoB,MAAMjC,EAAYjB,UAErDmD,EAAkB,SAAAC,GAEtB,OADkB1D,EAAYK,MAAQqD,GACrBC,QAAQ,IAGrBC,EAAYH,EAAgBF,GAElCjC,GAAkB,SAAAb,GAAI,kCACjBA,GADiB,IAEpBJ,MAAOuD,OAGT,IASMC,EATQC,OAAOC,QAAQT,EAAS,GAAGlB,KAAKoB,OACvBQ,MAAK,SAACC,EAAOC,GAClC,OAAID,EAAM,GAAGE,MAAM,KAAK,KAAOD,EAAM,GAAGC,MAAM,KAAK,GAC1CF,EAAM,GAAGE,MAAM,KAAK,GAAKD,EAAM,GAAGC,MAAM,KAAK,GAE7CF,EAAM,GAAGE,MAAM,KAAK,GAAKD,EAAM,GAAGC,MAAM,KAAK,MAIxBC,KAAI,SAAAC,GAClC,IAAMT,EAAYH,EAAgBY,EAAK,GAAG9C,EAAYjB,WACtD,MAAO,CAAE+D,KAAMA,EAAK,GAAI3C,SAAUkC,MAGpCb,EAAcc,QAEf,CAAC7D,EAAauB,EAAYjB,WAG3B,yBAAKJ,UAAU,OACb,kBAACoE,EAAA,EAAD,CAAOC,UAAW,GAAIrE,UAAU,aAC9B,+CACA,kBAACwB,EAAD,CACE1B,YAAaA,EACbuB,YAAaA,EACbxB,kBAAmBA,EACnBuB,kBAAmBA,IAErB,kBAACU,EAAD,CAAOC,QAASA,OC5DJuC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/B,MAAK,SAAAgC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.05817716.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\nimport LanguageIcon from \"@material-ui/icons/Language\";\nimport debounce from \"debounce\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CurrencyOne({\n  changeCurrencyOne,\n  currencyOne,\n}) {\n  const classes = useStyles();\n\n  const handleCurrencyChange = e => {\n    changeCurrencyOne(prev => ({ ...prev, currency: e.target.value }));\n  };\n\n  const handleValueChange = e => {\n    e.persist()\n\n    changeCurrencyOne(prev => ({ ...prev, value: e.target.value }));\n  };\n\n  return (\n    <div>\n      <div className=\"currency-container\">\n        {\" \"}\n        <FormControl className={classes.formControl}></FormControl>\n        <Select\n          value={currencyOne.currency}\n          onChange={handleCurrencyChange}\n          className=\"currency-dropdown\"\n        >\n          <MenuItem value=\"AUD\"> AUD</MenuItem>\n          <MenuItem value=\"BGN\"> BGN</MenuItem>\n          <MenuItem value=\"BRL\"> BRL</MenuItem>\n          <MenuItem value=\"CAD\">CAD</MenuItem>\n          <MenuItem value=\"CHF\"> CHF</MenuItem>\n          <MenuItem value=\"CNY\"> CNY</MenuItem>\n          <MenuItem value=\"CZK\"> CZK</MenuItem>\n          <MenuItem value=\"EUR\"> EUR</MenuItem>\n          <MenuItem value=\"GBP\"> GBP</MenuItem>\n          <MenuItem value=\"HKD\"> HKD</MenuItem>\n          <MenuItem value=\"HRK\"> HRK</MenuItem>\n          <MenuItem value=\"HUF\"> HUF</MenuItem>\n          <MenuItem value=\"IDR\"> IDR</MenuItem>\n          <MenuItem value=\"ILS\"> ILS</MenuItem>\n          <MenuItem value=\"INR\"> INR</MenuItem>\n          <MenuItem value=\"ISK\"> ISK</MenuItem>\n          <MenuItem value=\"JPY\"> JPY</MenuItem>\n          <MenuItem value=\"KRW\"> KRW</MenuItem>\n          <MenuItem value=\"MXN\"> MXN</MenuItem>\n          <MenuItem value=\"MYR\"> MYR</MenuItem>\n          <MenuItem value=\"NOK\"> NOK</MenuItem>\n          <MenuItem value=\"NZD\"> NZD</MenuItem>\n          <MenuItem value=\"PHP\"> PHP</MenuItem>\n          <MenuItem value=\"PKR\"> PKR</MenuItem>\n          <MenuItem value=\"PLN\"> PLN</MenuItem>\n          <MenuItem value=\"RON\"> RON</MenuItem>\n          <MenuItem value=\"RUB\"> RUB</MenuItem>\n          <MenuItem value=\"SEK\"> SEK</MenuItem>\n          <MenuItem value=\"SGD\"> SGD</MenuItem>\n          <MenuItem value=\"THB\"> THB</MenuItem>\n          <MenuItem value=\"TRY\"> TRY</MenuItem>\n          <MenuItem value=\"USD\"> USD</MenuItem>\n          <MenuItem value=\"ZAR\"> ZAR</MenuItem>\n        </Select>\n        <FormControl />\n        <TextField\n          id=\"outlined-number\"\n          label=\"Number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currencyOne.value}\n          onChange={e => handleValueChange(e)}\n        />\n      </div>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport TextField from \"@material-ui/core/TextField\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport InputLabel from \"@material-ui/core/InputLabel\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport FormHelperText from \"@material-ui/core/FormHelperText\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport Select from \"@material-ui/core/Select\";\n\nconst useStyles = makeStyles(theme => ({\n  root: {\n    \"& .MuiTextField-root\": {\n      margin: theme.spacing(1),\n      width: \"25ch\",\n    },\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120,\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2),\n    },\n  },\n}));\n\nexport default function CurrencyTwo({\n  changeCurrencyTwo,\n  currencyTwo,\n  currencyValue,\n}) {\n  const classes = useStyles();\n  const handleCurrencyChange = e => {\n    changeCurrencyTwo(prev => ({ ...prev, currency: e.target.value }));\n  };\n  return (\n    <div>\n      <div className=\"currency-container\">\n        {\" \"}\n        <FormControl className={classes.formControl}></FormControl>\n        <Select\n          value={currencyTwo.currency}\n          onChange={handleCurrencyChange}\n          className=\"currency-dropdown\"\n        >\n                   <MenuItem value=\"AUD\"> AUD</MenuItem>\n          <MenuItem value=\"BGN\"> BGN</MenuItem>\n          <MenuItem value=\"BRL\"> BRL</MenuItem>\n          <MenuItem value=\"CAD\">CAD</MenuItem>\n          <MenuItem value=\"CHF\"> CHF</MenuItem>\n          <MenuItem value=\"CNY\"> CNY</MenuItem>\n          <MenuItem value=\"CZK\"> CZK</MenuItem>\n          <MenuItem value=\"EUR\"> EUR</MenuItem>\n          <MenuItem value=\"GBP\"> GBP</MenuItem>\n          <MenuItem value=\"HKD\"> HKD</MenuItem>\n          <MenuItem value=\"HRK\"> HRK</MenuItem>\n          <MenuItem value=\"HUF\"> HUF</MenuItem>\n          <MenuItem value=\"IDR\"> IDR</MenuItem>\n          <MenuItem value=\"ILS\"> ILS</MenuItem>\n          <MenuItem value=\"INR\"> INR</MenuItem>\n          <MenuItem value=\"ISK\"> ISK</MenuItem>\n          <MenuItem value=\"JPY\"> JPY</MenuItem>\n          <MenuItem value=\"KRW\"> KRW</MenuItem>\n          <MenuItem value=\"MXN\"> MXN</MenuItem>\n          <MenuItem value=\"MYR\"> MYR</MenuItem>\n          <MenuItem value=\"NOK\"> NOK</MenuItem>\n          <MenuItem value=\"NZD\"> NZD</MenuItem>\n          <MenuItem value=\"PHP\"> PHP</MenuItem>\n          <MenuItem value=\"PKR\"> PKR</MenuItem>\n          <MenuItem value=\"PLN\"> PLN</MenuItem>\n          <MenuItem value=\"RON\"> RON</MenuItem>\n          <MenuItem value=\"RUB\"> RUB</MenuItem>\n          <MenuItem value=\"SEK\"> SEK</MenuItem>\n          <MenuItem value=\"SGD\"> SGD</MenuItem>\n          <MenuItem value=\"THB\"> THB</MenuItem>\n          <MenuItem value=\"TRY\"> TRY</MenuItem>\n          <MenuItem value=\"USD\"> USD</MenuItem>\n          <MenuItem value=\"ZAR\"> ZAR</MenuItem>\n        </Select>\n        <FormControl />\n        <TextField\n          id=\"outlined-number\"\n          label=\"Number\"\n          type=\"number\"\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n          value={currencyTwo.value}\n        />\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport CurrencyOne from \"./CurrencyOne\";\nimport CurrencyTwo from \"./CurrencyTwo\";\nimport Button from \"@material-ui/core/Button\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport SwapVertIcon from \"@material-ui/icons/SwapVert\";\n\nconst useStyles = makeStyles(theme => ({\n  button: {\n    margin: theme.spacing(1),\n  },\n}));\n\nexport default function Exchange({ ...props }) {\n  const classes = useStyles();\n  const swapExchange = () => {\n    props.changeCurrencyOne(prev => ({\n      ...prev,\n      currency: props.currencyTwo.currency,\n    }));\n\n    props.changeCurrencyTwo(prev => ({\n      ...prev,\n      currency: props.currencyOne.currency,\n    }));\n  };\n\n  return (\n    <div>\n      <CurrencyOne {...props} />\n      <Button\n        onClick={swapExchange}\n        variant=\"contained\"\n        color=\"default\"\n        className={classes.button}\n        startIcon={<SwapVertIcon />}\n      >\n        Swap\n      </Button>\n      <CurrencyTwo {...props} />\n      <h2>\n        {props.currencyOne.value} {props.currencyOne.currency} ={\" \"}\n        {props.currencyTwo.value} {props.currencyTwo.currency}\n      </h2>\n    </div>\n  );\n}\n","import React from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n} from \"recharts\";\n\nexport default function Chart({ mapData }) {\n  const renderLineChart = (\n    <LineChart\n      width={600}\n      height={300}\n      data={mapData}\n      margin={{\n        top: 5,\n        right: 30,\n        left: 20,\n        bottom: 5,\n      }}\n    >\n      <CartesianGrid strokeDasharray=\"3 3\" />\n      <XAxis dataKey=\"date\" />\n      <YAxis />\n      <Tooltip />\n      <Legend />\n      <Line\n        type=\"monotone\"\n        dataKey=\"Exchange\"\n        stroke=\"#8884d8\"\n        dot={false}\n      />\n    </LineChart>\n  );\n\n  return <div>{renderLineChart}</div>;\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport axios from \"axios\";\nimport Exchange from \"./Exchange\";\nimport Chart from \"./Chart\";\nimport Paper from \"@material-ui/core/Paper\";\n\nfunction App() {\n  const [currencyTwo, changeCurrencyTwo] = useState({\n    currency: \"USD\",\n    value: 0,\n  });\n\n  const [currencyOne, changeCurrencyOne] = useState({\n    currency: \"CAD\",\n    value: 1,\n  });\n\n  const [mapData, changeMapData] = useState();\n\n  useEffect(() => {\n    Promise.all([\n      axios.get(\n        `https://api.exchangeratesapi.io/latest?base=${currencyOne.currency}\n  `\n      ),\n      axios.get(\n        `https://api.exchangeratesapi.io/history?start_at=2020-01-01&end_at=2020-06-17&base=${currencyOne.currency}`\n      ),\n    ]).then(response => {\n      const conversionValue = response[0].data.rates[currencyTwo.currency];\n\n      const convertCurrency = conversionRate => {\n        const converted = currencyOne.value * conversionRate;\n        return converted.toFixed(4);\n      };\n\n      const converted = convertCurrency(conversionValue);\n\n      changeCurrencyTwo(prev => ({\n        ...prev,\n        value: converted,\n      }));\n\n      const dates = Object.entries(response[1].data.rates);\n      const newDates = dates.sort((date1, date2) => {\n        if (date1[0].split(\"-\")[1] === date2[0].split(\"-\")[1]) {\n          return date1[0].split(\"-\")[2] - date2[0].split(\"-\")[2];\n        } else {\n          return date1[0].split(\"-\")[1] - date2[0].split(\"-\")[1];\n        }\n      });\n\n      const newDatesMapped = newDates.map(date => {\n        const converted = convertCurrency(date[1][currencyTwo.currency]);\n        return { date: date[0], Exchange: converted };\n      });\n\n      changeMapData(newDatesMapped);\n    });\n  }, [currencyOne, currencyTwo.currency]);\n\n  return (\n    <div className=\"App\">\n      <Paper elevation={24} className=\"container\">\n        <h1>FOREX Converter</h1>\n        <Exchange\n          currencyOne={currencyOne}\n          currencyTwo={currencyTwo}\n          changeCurrencyOne={changeCurrencyOne}\n          changeCurrencyTwo={changeCurrencyTwo}\n        />\n        <Chart mapData={mapData} />\n      </Paper>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}